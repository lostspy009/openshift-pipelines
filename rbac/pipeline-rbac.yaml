apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-service-account
  namespace: openshift-pipelines
  labels:
    app.kubernetes.io/name: openshift-pipelines
    app.kubernetes.io/component: pipeline-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pipeline-cluster-role
  labels:
    app.kubernetes.io/name: openshift-pipelines
    app.kubernetes.io/component: pipeline-rbac
rules:
  # Namespace management
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  
  # Resource quota management
  - apiGroups: [""]
    resources: ["resourcequotas", "limitranges"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  
  # Network policy management
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  
  # RBAC management
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  
  # Service account management
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  
  # Secret management for git operations
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "update", "patch"]
  
  # Pod management for task execution
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  
  # ConfigMap management
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "create", "update", "patch"]
  
  # PVC management for workspaces
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipeline-cluster-role-binding
  labels:
    app.kubernetes.io/name: openshift-pipelines
    app.kubernetes.io/component: pipeline-rbac
subjects:
  - kind: ServiceAccount
    name: pipeline-service-account
    namespace: openshift-pipelines
roleRef:
  kind: ClusterRole
  name: pipeline-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Additional role for accessing git secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pipeline-git-role
  namespace: openshift-pipelines
  labels:
    app.kubernetes.io/name: openshift-pipelines
    app.kubernetes.io/component: pipeline-rbac
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
    resourceNames: ["git-credentials", "github-token"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-git-role-binding
  namespace: openshift-pipelines
  labels:
    app.kubernetes.io/name: openshift-pipelines
    app.kubernetes.io/component: pipeline-rbac
subjects:
  - kind: ServiceAccount
    name: pipeline-service-account
    namespace: openshift-pipelines
roleRef:
  kind: Role
  name: pipeline-git-role
  apiGroup: rbac.authorization.k8s.io
