apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: clone-manifest-repo
  labels:
    app.kubernetes.io/name: clone-manifest-repo
    app.kubernetes.io/version: "0.1"
spec:
  description: >-
    This task clones a git repository to the output workspace.
  params:
    - name: url
      description: Repository URL to clone from
      type: string
      default: 'https://github.com/lostspy009/openshift-pipelines.git'
    - name: revision
      description: Revision to checkout (branch, tag, sha, ref, etc...)
      type: string
      default: "main"
    - name: deleteExisting
      description: Clean out the contents of the destination directory if it already exists before cloning
      type: string
      default: "true"
    - name: verbose
      description: Log the commands that are executed during git clone
      type: string
      default: "true"
  workspaces:
    - name: output
      description: The git repo will be cloned onto the volume backing this Workspace.
    - name: source
      description: Source workspace for temporary operations.
  steps:
    - name: clone
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2
      env:
        - name: HOME
          value: "/tekton/home"
        - name: PARAM_URL
          value: $(params.url)
        - name: PARAM_REVISION
          value: $(params.revision)
        - name: PARAM_DELETE_EXISTING
          value: $(params.deleteExisting)
        - name: PARAM_VERBOSE
          value: $(params.verbose)
        - name: WORKSPACE_OUTPUT_PATH
          value: $(workspaces.output.path)
      script: |
        #!/usr/bin/env sh
        set -eu

        if [ "${PARAM_VERBOSE}" = "true" ] ; then
          set -x
        fi

        if [ "${PARAM_DELETE_EXISTING}" = "true" ] ; then
          cleandir() {
            # Delete any existing contents of the repo directory if it exists.
            if [ -d "${WORKSPACE_OUTPUT_PATH}" ] ; then
              # Delete non-hidden files and directories
              rm -rf "${WORKSPACE_OUTPUT_PATH:?}"/*
              # Delete files and directories starting with . but excluding ..
              rm -rf "${WORKSPACE_OUTPUT_PATH}"/.[!.]*
              # Delete files and directories starting with .. plus any other character
              rm -rf "${WORKSPACE_OUTPUT_PATH}"/..?*
            fi
          }
          cleandir || true
        fi

        /ko-app/git-init \
          -url="${PARAM_URL}" \
          -revision="${PARAM_REVISION}" \
          -path="${WORKSPACE_OUTPUT_PATH}"
        
        cd "${WORKSPACE_OUTPUT_PATH}"
        RESULT_SHA="$(git rev-parse HEAD)"
        EXIT_CODE="$?"
        if [ "${EXIT_CODE}" != 0 ] ; then
          exit "${EXIT_CODE}"
        fi
        printf "%s" "${RESULT_SHA}" > "/tekton/results/commit"
  results:
    - name: commit
      description: The precise commit SHA that was fetched by this Task.
