apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: push-to-manifest-repo
  labels:
    app.kubernetes.io/name: push-to-manifest-repo
    app.kubernetes.io/version: "0.1"
spec:
  description: >-
    This task pushes the generated manifests to the git repository.
  params:
    - name: MANIFEST_GIT_REPO
      description: Git repo url for config manifests
      type: string
    - name: MANIFEST_GIT_BRANCH
      description: Git branch for config manifest
      type: string
    - name: REQUESTER_ID
      description: Requester ID
      type: string
    - name: NAMESPACE_NAME
      description: Namespace name
      type: string
    - name: CLUSTER_ENV
      description: Cluster Environment
      type: string
    - name: CLUSTER
      description: Cluster Name
      type: string
    - name: AUTO_MERGE_PR
      description: Automatically Merge PR
      type: string
      default: 'false'
    - name: ACTION
      description: Action to perform (create/update/delete)
      type: string
      default: create
  workspaces:
    - name: source
      description: Source workspace
    - name: output
      description: Output workspace with manifests
  steps:
    - name: setup-git
      image: registry.redhat.io/ubi8/git-core:latest
      script: |
        #!/bin/bash
        set -e
        
        # Configure git
        git config --global user.name "Tekton Pipeline"
        git config --global user.email "tekton@pipeline.local"
        
        cd $(workspaces.output.path)
        
        # Initialize git if not already done
        if [ ! -d .git ]; then
          git init
          git remote add origin $(params.MANIFEST_GIT_REPO)
        fi
        
        # Fetch latest changes
        git fetch origin $(params.MANIFEST_GIT_BRANCH) || true
        
        # Create and checkout feature branch
        BRANCH_NAME="$(params.ACTION)-namespace-$(params.NAMESPACE_NAME)-$(date +%Y%m%d-%H%M%S)"
        git checkout -b "${BRANCH_NAME}" origin/$(params.MANIFEST_GIT_BRANCH) || git checkout -b "${BRANCH_NAME}"
        
        echo "Created branch: ${BRANCH_NAME}"
        echo "${BRANCH_NAME}" > /tekton/results/branch-name
        
    - name: commit-and-push
      image: registry.redhat.io/ubi8/git-core:latest
      script: |
        #!/bin/bash
        set -e
        
        cd $(workspaces.output.path)
        
        # Read the branch name
        BRANCH_NAME=$(cat /tekton/results/branch-name)
        
        # Create cluster-specific directory structure
        CLUSTER_PATH="clusters/$(params.CLUSTER_ENV)/$(params.CLUSTER)"
        mkdir -p "${CLUSTER_PATH}"
        
        # Copy namespace manifests to cluster-specific path
        if [ -d namespaces/$(params.NAMESPACE_NAME) ]; then
          cp -r namespaces/$(params.NAMESPACE_NAME) "${CLUSTER_PATH}/"
          echo "Copied manifests to ${CLUSTER_PATH}/$(params.NAMESPACE_NAME)"
        fi
        
        # Add changes
        git add .
        
        # Check if there are changes to commit
        if git diff --cached --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Commit changes
        COMMIT_MSG="$(params.ACTION) namespace $(params.NAMESPACE_NAME) for $(params.CLUSTER_ENV)/$(params.CLUSTER)
        
        Requester: $(params.REQUESTER_ID)
        Action: $(params.ACTION)
        Namespace: $(params.NAMESPACE_NAME)
        Cluster: $(params.CLUSTER_ENV)/$(params.CLUSTER)
        
        Generated by Tekton Pipeline"
        
        git commit -m "${COMMIT_MSG}"
        
        # Push to remote
        git push origin "${BRANCH_NAME}"
        
        echo "Pushed changes to branch: ${BRANCH_NAME}"
        
        # Create PR if auto-merge is enabled (placeholder - would need actual implementation)
        if [ "$(params.AUTO_MERGE_PR)" = "true" ]; then
          echo "Auto-merge enabled - would create and merge PR automatically"
          # Implementation would depend on git provider (GitHub, GitLab, etc.)
        fi
        
  results:
    - name: branch-name
      description: The git branch name created for this change
